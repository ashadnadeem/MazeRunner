/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dell
 */
package mazerunner;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class victoryUI extends javax.swing.JFrame {

        /**
         * Creates new form victoryUI
         */
        double bestTime;
        int index;
        String name;

        victoryUI(Generator aThis, double d, stopwatch s, double bestTime, int index) {
                this.bestTime = bestTime;
                this.index = index;
                initComponents();
                delay(aThis, d, s);
        }

        private victoryUI() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        victoryUI(Generator aThis, double d, stopwatch s, double bestTime, int index, player p) {
                this(aThis, d, s, bestTime, index);
                this.name = p.name;
        }

        /**
         * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VICTORY");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 740, 130, 130));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mazerunner/victory.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

        public void delay(Generator prevUI, double d, stopwatch s) {
                // delay of one second here
                timer = new Timer(0, new ActionListener() {

                        @Override
                        public void actionPerformed(ActionEvent e) {
                                //What action Should it Perform afterDelay Time?

                                prevUI.setVisible(false);
                                double time = s.minute * 60 + s.second + s.csecond / 100.0;
                                if (bestTime == 0 || time < bestTime) {
                                        try {
                                                RandomAccessFile file = new RandomAccessFile("bestTimes.dat", "rw");
                                                file.seek(index * 48);
                                                file.writeDouble(Math.round(time * 100) / 100.0);
                                                StringBuffer sb;
                                                sb = new StringBuffer(name);
                                                sb.setLength(20);
                                                file.writeChars(sb.toString());

                                                new highscoreUI(bestTime, time).setVisible(true);

                                        } catch (FileNotFoundException ex) {
                                        } catch (IOException ex) {
                                                Logger.getLogger(victoryUI.class.getName()).log(Level.SEVERE, null, ex);
                                        }

                                } else {
                                        setVisible(true);
                                }

                                s.setVisible(false);

                        }
                });
                timer.setInitialDelay((int) (d * 1000)); //wait one second * d
                timer.setRepeats(false); //only once
                timer.start();
        }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
                    new Home().setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(victoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(victoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(victoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(victoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                //new victoryUI().setVisible(true);
                        }
                });
        }

        

        private Timer timer;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
